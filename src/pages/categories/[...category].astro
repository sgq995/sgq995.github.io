---
import type { CollectionEntry } from "astro:content";
import Page from "../../layouts/Page.astro";
import Separator from "../../components/Separator.astro";
import Typography from "../../components/Typography.astro";
import PostList from "../../components/PostList.astro";
import { getLangFromUrl, getTransalations } from "../../i18n";
import { TbCalculator } from "solid-icons/tb";
import {
  getPostsGroupByCategories,
  sortPostsByDateDesc,
} from "../../utilities/content.utility";

type Meta = {
  category: string;
  posts: CollectionEntry<"blog">[];
};

export async function getStaticPaths() {
  const categories = await getPostsGroupByCategories();
  return Object.keys(categories).map((category) => ({
    params: { category },
    props: {
      category,
      posts: categories[category],
    },
  }));
}

export type Props = Meta;

const meta = Astro.props;

const entries = sortPostsByDateDesc(meta.posts).map((post) => ({
  date: post.data.pubDate,
  title: post.data.title,
  slug: post.slug,
}));

const lang = getLangFromUrl(Astro.url);
const t = getTransalations(lang);

const postsCount = `${entries.length} ${
  entries.length === 1
    ? t("categories.posts.count.singular")
    : t("categories.posts.count.plural")
}`;
---

<Page title={meta.category}>
  <div class="py-8">
    <section>
      <header>
        <Typography variant="h1">{meta.category}</Typography>

        <div class="flex items-center gap-2 pt-2">
          <TbCalculator class="icon icon--small" />
          <Typography>
            {postsCount}
          </Typography>
        </div>
      </header>

      <Separator />

      <PostList entries={entries} />
    </section>

    <Separator color="secondary" />
  </div>
</Page>
