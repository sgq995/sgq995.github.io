---
import { CollectionEntry, getCollection } from "astro:content";
import Page from "../layouts/Page.astro";
import Typography from "../components/Typography.astro";
import Separator from "../components/Separator.astro";
import { TbCalendar, TbClock } from "solid-icons/tb";
import { formatDate } from "../utilities/date.utility";
import { getReadingTime } from "../utilities/content.utility";
import { getLangFromUrl, getTransalations } from "../i18n";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await post.render();

const lang = getLangFromUrl(Astro.url);
const t = getTransalations(lang);

const readingTime = getReadingTime(post.body);
const timeToRead = `${
  readingTime < 1 ? t("post.time.less") : t("post.time.almost")
} ${readingTime} ${t("post.time.unit")}`;
---

<Page>
  <div class="py-8">
    <Typography variant="h1">{post.data.title}</Typography>

    <div class="flex items-center gap-2 pt-2">
      <TbCalendar class="fill-none stroke-slate-600 stroke-2" />
      <Typography>
        {formatDate(Astro.url, post.data.pubDate)}
      </Typography>

      <TbClock class="fill-none stroke-slate-600 stroke-2" />
      <Typography>
        {timeToRead}
      </Typography>
    </div>

    <Separator />

    <div class="content">
      <Content />
    </div>
  </div>
</Page>

<style lang="scss">
  .content {
    :global(h1) {
      @apply text-4xl font-bold;
    }

    :global(h2) {
      @apply text-3xl font-bold;
    }

    :global(h3) {
      @apply text-xl font-bold;
    }

    :global(h4) {
      @apply text-lg font-bold;
    }

    :global(h5) {
      @apply font-bold;
    }

    :global(h6) {
      @apply text-sm font-bold;
    }

    :global(h1),
    :global(h2),
    :global(h3),
    :global(h4),
    :global(h5),
    :global(h6) {
      @apply mb-2 mt-4;
    }

    :global(p) {
      @apply py-2;
    }

    :global(a) {
      @apply underline;

      &:hover {
        @apply text-slate-600;
      }
    }

    :global(img) {
      @apply max-w-full;
    }

    :global(blockquote) {
      @apply my-2 rounded-md bg-gray-200 px-4;
    }

    :global(table) {
      @apply border-collapse border border-solid border-gray-400;

      :global(thead) {
        @apply bg-gray-100;

        :global(th) {
          @apply border border-gray-400 p-2 text-left font-semibold;
        }
      }

      :global(td) {
        @apply border border-gray-400 p-2;
      }
    }

    :global(pre) {
      @apply p-4;
    }

    :global(ol) {
      @apply list-decimal pl-5;
    }

    :global(ul) {
      @apply list-disc pl-5;
    }

    :global(kbd) {
      @apply box-border inline-block whitespace-nowrap rounded-sm border border-solid border-gray-400 bg-gray-100 px-1 py-0.5 pb-px text-xs font-semibold shadow-inner shadow-gray-50 drop-shadow-sm;
    }

    :global(mark) {
      @apply bg-orange-100;
    }
  }
</style>
