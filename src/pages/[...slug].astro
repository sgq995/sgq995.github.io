---
import type { CollectionEntry } from "astro:content";
import Page from "../layouts/Page.astro";
import Typography from "../components/Typography.astro";
import Separator from "../components/Separator.astro";
import { formatDate } from "../utilities/date.utility";
import { getBlogPosts, getReadingTime } from "../utilities/content.utility";
import { getLangFromUrl, getTransalations } from "../i18n";
import Badge from "../components/Badge.astro";
import Link from "../components/Link.astro";
import { TbCalendar, TbClock, TbEdit, TbFolder, TbTag } from "solid-icons/tb";

export async function getStaticPaths() {
  const posts = await getBlogPosts();
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await post.render();

const lang = getLangFromUrl(Astro.url);
const t = getTransalations(lang);

const readingTime = getReadingTime(post.body);
const timeToRead = `${
  readingTime > 1 ? t("post.time.almost") : t("post.time.less")
} ${readingTime > 1 ? readingTime : 1} ${t("post.time.unit")}`;
---

<Page title={post.data.title} description={post.data.description}>
  <div class="py-8">
    <section>
      <header>
        <Typography variant="h1">{post.data.title}</Typography>

        <div class="flex items-center gap-2 pt-2">
          <TbCalendar class="icon icon--small" />
          <Typography>
            {formatDate(Astro.url, post.data.pubDate)}
          </Typography>

          <TbClock class="icon icon--small" />
          <Typography>
            {timeToRead}
          </Typography>
        </div>
      </header>

      <Separator />

      <div class="content">
        <Content />
      </div>
    </section>

    <Separator color="secondary" />

    <section class="flex flex-col gap-2">
      <Badge icon={TbEdit}>
        {formatDate(Astro.url, post.data.updatedDate ?? post.data.pubDate)}
      </Badge>

      {
        post.data.category && (
          <Badge icon={TbFolder}>
            <Link href={`/categories/${post.data.category}`}>
              {post.data.category}
            </Link>
          </Badge>
        )
      }

      {
        post.data.tags && (
          <Badge icon={TbTag}>
            {post.data.tags.map((tag) => (
              <Link href={`/tags/${tag}`}>{tag}</Link>
            ))}
          </Badge>
        )
      }
    </section>

    <Separator />
  </div>
</Page>

<style lang="scss">
  .content {
    :global(h1) {
      @apply text-4xl font-bold;
    }

    :global(h2) {
      @apply text-3xl font-bold;
    }

    :global(h3) {
      @apply text-xl font-bold;
    }

    :global(h4) {
      @apply text-lg font-bold;
    }

    :global(h5) {
      @apply font-bold;
    }

    :global(h6) {
      @apply text-sm font-bold;
    }

    :global(h1),
    :global(h2),
    :global(h3),
    :global(h4),
    :global(h5),
    :global(h6) {
      @apply mb-2 mt-4;
    }

    :global(p) {
      @apply py-2;
    }

    :global(a) {
      @apply underline;

      &:hover {
        @apply text-slate-600 dark:text-slate-600;
      }
    }

    :global(img) {
      @apply max-w-full;
    }

    :global(blockquote) {
      @apply my-2 rounded-md bg-gray-200 px-4 dark:bg-gray-800;
    }

    :global(table) {
      @apply border-collapse border border-solid border-gray-400 dark:border-gray-600;

      :global(thead) {
        @apply bg-gray-100;

        :global(th) {
          @apply border border-gray-400 p-2 text-left font-semibold dark:border-gray-600;
        }
      }

      :global(td) {
        @apply border border-gray-400 p-2 dark:border-gray-600;
      }
    }

    :global(pre) {
      @apply p-4;
    }

    :global(ol) {
      @apply list-decimal pl-5;
    }

    :global(ul) {
      @apply list-disc pl-5;
    }

    :global(kbd) {
      @apply box-border inline-block whitespace-nowrap rounded-sm border border-solid border-gray-400 bg-gray-100 px-1 py-0.5 pb-px text-xs font-semibold shadow-inner shadow-gray-50 drop-shadow-sm dark:border-gray-600 dark:bg-gray-900 dark:shadow-gray-950;
    }

    :global(mark) {
      @apply bg-orange-100 dark:bg-sky-900;
    }
  }
</style>
